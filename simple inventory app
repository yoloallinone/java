package entity;

import java.io.Serializable;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;


@Entity
public class Student implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;
    private String sap;
    private String name;
    private String phone;
    

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }
    public String getName() {
        return name;
    }

    public void setName(String n) {
        this.name = n;
    }

    public String getSap() {
        return sap;
    }

    public void setSap(String n) {
        this.sap = n;
    }
    
    public String getPhone() {
        return phone;
    }

    public void setPhone(String n) {
        this.phone = n;
    }
    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
       
        if (!(object instanceof Student)) {
            return false;
        }
        Student other = (Student) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "entity.Student[ id=" + id + " ]";
    }
    
}

//StudentDemo
package entity;
import entity.Student;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.PersistenceException;

public class StudentDemo {
    public void persist(Object o)
    {
    EntityManagerFactory emf=javax.persistence.Persistence.createEntityManagerFactory("Simple_JPAPU");
    EntityManager em=emf.createEntityManager();
    em.getTransaction().begin();
    try{
    em.persist(o);
    em.getTransaction().commit();
    
    }
    catch(Exception e){
    em.getTransaction().rollback();
    
    }
    finally{
    em.close();
    }
    }
    public static void main(String args[]) throws PersistenceException
    {
        Student s=new Student();
        s.setName("ABC");
        s.setPhone("098767654");
        s.setSap("53000001");
        StudentDemo s1=new StudentDemo();
        s1.persist(s);
     
        
    }
}
